<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro" name="gazebo_essentials" >

<!--############################# ROS-CONTROL #########################################-->
<gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/</robotNamespace>
    <controlPeriod>0.001</controlPeriod>
    <legacyModeNS>false</legacyModeNS>
  </plugin>
</gazebo>
  
        <!-- ##################  ros_control move plugin   ################################-->
  <gazebo> >
    <plugin name="object_controller" filename="libgazebo_ros_planar_move.so">
      <commandTopic>/cmd_vel</commandTopic>
      <odometryTopic>/odom</odometryTopic>
      <odometryFrame>/odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>

<!-- <gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>FL_wheel_joint</leftFrontJoint>
    <rightFrontJoint>FR_wheel_joint</rightFrontJoint>
    <leftRearJoint>RL_wheel_joint</leftRearJoint>
    <rightRearJoint>RR_wheel_joint</rightRearJoint>
    <wheelSeparation>0.7</wheelSeparation>
    <wheelDiameter>0.215</wheelDiameter>
    <robotBaseFrame>base_footprint</robotBaseFrame>
    <torque>20</torque>
    <topicName>cmd_vel</topicName>
    <broadcastTF>true</broadcastTF>
  </plugin>
</gazebo> -->

  <!-- ##################  hokuyo uam front LiDAR controller  ##################-->
  
  <gazebo reference="urg_front_link">
    <sensor type="ray" name="hokuyo_uam_front_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619445</min_angle>
            <max_angle>2.35619445</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/urg_front/scan</topicName>
        <frameName>urg_front_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- ##################  hokuyo uam rear LiDAR controller  ##################-->
  
  <gazebo reference="urg_back_link">
    <sensor type="ray" name="hokuyo_uam_rear_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619445</min_angle>
            <max_angle>2.35619445</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/urg_back/scan</topicName>
        <frameName>urg_back_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
    
 <!-- ##################  Intel d435 front camera controller  ##################-->

  <gazebo reference="d435_front_link">
    <sensor name="Intel_d435_front_camera" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="Intel_d435_front_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0</updateRate>
        <cameraName>d435_front</cameraName>
        <imageTopicName>/d435_front/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/d435_front/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/d435_front/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/d435_front/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/d435_front/depth/points</pointCloudTopicName>
        <frameName>d435_front_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000000</distortionK1>
        <distortionK2>0.00000000</distortionK2>
        <distortionK3>0.00000000</distortionK3>
        <distortionT1>0.00000000</distortionT1>
        <distortionT2>0.00000000</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>320.6602173</Cx>
        <Cy>246.184066</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

<!-- ##################  Intel d435 left camera controller  ##################-->

  <gazebo reference="d435_left_link">
    <sensor name="Intel_d435_left_camera" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="Intel_d435_left_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0</updateRate>
        <cameraName>d435_left</cameraName>
        <imageTopicName>/d435_left/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/d435_left/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/d435_left/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/d435_left/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/d435_left/depth/points</pointCloudTopicName>
        <frameName>d435_left_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000000</distortionK1>
        <distortionK2>0.00000000</distortionK2>
        <distortionK3>0.00000000</distortionK3>
        <distortionT1>0.00000000</distortionT1>
        <distortionT2>0.00000000</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>320.6602173</Cx>
        <Cy>246.184066</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

<!-- ##################  Intel d435 right camera controller  ##################-->

  <gazebo reference="d435_right_link">
    <sensor name="Intel_d435_right_camera" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="Intel_d435_right_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0</updateRate>
        <cameraName>d435_right</cameraName>
        <imageTopicName>/d435_right/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/d435_right/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/d435_right/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/d435_right/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/d435_right/depth/points</pointCloudTopicName>
        <frameName>d435_right_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000000</distortionK1>
        <distortionK2>0.00000000</distortionK2>
        <distortionK3>0.00000000</distortionK3>
        <distortionT1>0.00000000</distortionT1>
        <distortionT2>0.00000000</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>320.6602173</Cx>
        <Cy>246.184066</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
    
    <!-- ##############################  IMU plugin    ###################### -->
    <gazebo reference="d435_front_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <noise>
        <type>gaussian</type>
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu_data</topicName>
        <bodyName>d435_front_link</bodyName>
        <updateRateHZ>20.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>d435_front_link</frameName>
        <!-- <initialOrientationAsReference>false</initialOrientationAsReference> -->
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
</robot>
